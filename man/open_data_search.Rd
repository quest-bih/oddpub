% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ODDPub.R
\name{open_data_search}
\alias{open_data_search}
\title{Seach for open data & open code keywords.}
\usage{
open_data_search(
  PDF_text_sentences,
  extract_sentences = TRUE,
  stop_if_hit_in_DAS = TRUE
)
}
\arguments{
\item{PDF_text_sentences}{Document corpus loaded with the pdf_load function.}

\item{extract_sentences}{Boolean. If TRUE, the sentences in which the Open Data
statements were detected are extracted and added to the results table as well.}

\item{stop_if_hit_in_DAS}{Boolean. If TRUE, the default setting, then first
the Data availability and Code availability statement or statements (DAS and CAS)
will be screened and then the full text (without references) will only be screened
if no open data or data re-use or github data were detected in the DAS and CAS.
If FALSE, then the full text (without references) will be screened immediately.}
}
\value{
Tibble with one row per screened document and the filename and logical values for open data
and open code detection as columns plus additional columns containing the identified open data/code categories
as well as the sentences in which open data/code was detected.
}
\description{
The algorithm first searchers for a Data Availability Statement (DAS) and extracts it.
If no DAS was found, the algorithm searches for several categories of similar keywords
in each sentence. Multiple categories have to match for a single sentence to trigger a detection.
Among keyword categories are categories for specific biomedical databases as well as
their corresponding accession numbers (as regular expressions), general-purpose repositories
or different file formats typically used to distribute raw data in the supplement.
Additionally, Open Code dissemination is detected using keywords categories for source code or
code repositories.
}
\examples{
\dontrun{
open_data_search(pdf_load("examples/"))
}

}

% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ODDPub.R
\name{open_data_search}
\alias{open_data_search}
\title{Seach for open data & open code keywords.}
\usage{
open_data_search(
  pdf_text_sentences,
  extract_sentences = TRUE,
  screen_das = "priority"
)
}
\arguments{
\item{pdf_text_sentences}{Document corpus loaded with the pdf_load function.}

\item{extract_sentences}{Boolean. If TRUE, the sentences in which the Open Data
statements were detected are extracted and added to the results table as well.}

\item{screen_das}{How to screen Data availability and Code availability
statement or statements (DAS and CAS). The default, "priority"
screens DAS and CAS first if available and then the full text (without references)
will only be screened if no open data or data re-use or github data were detected
in the DAS and CAS.
If set to "extra", the DAS and CAS are screened first, if available, and then
the full text is also always screened. This is to allow for the detection of
data re-use, open data, or open code in the main text with an uninformative
DAS or CAS.
With both of the above options the output generates two new columns,
`is_open_data_das` and `is_open_code_cas`, which give the detections for only
the DAS and CAS, respectively, as opposed to the detections based on the full
screen (`is_open_data`, `is_open_code`).
If set to "legacy", then the full text (without references) will be screened
immediately. Caution is to be used with this setting, as the special detection
algorithm for DAS is not applied here and DAS in papers with complex layouts,
e.g. PLoS, will most likely cause references to data sets to be missed.}
}
\value{
Tibble with one row per screened document and the filename and logical values for open data
and open code detection as columns plus additional columns containing the identified open data/code categories
as well as the sentences in which open data/code was detected.
}
\description{
The algorithm first searchers for a Data Availability Statement (DAS) and extracts it.
If no DAS was found, the algorithm searches for several categories of similar keywords
in each sentence. Multiple categories have to match for a single sentence to trigger a detection.
Among keyword categories are categories for specific biomedical databases as well as
their corresponding accession numbers (as regular expressions), general-purpose repositories
or different file formats typically used to distribute raw data in the supplement.
Additionally, Open Code dissemination is detected using keywords categories for source code or
code repositories.
}
\examples{
\dontrun{
open_data_search(pdf_load("examples/"))
open_data_search(pdf_load("examples/"), screen_das = "extra")

future::plan(multisession) # add this for parallelization
progressr::handlers(global = TRUE) # add this for visualizing the progress

text_corpus <- pdf_load("examples/")
results <- open_data_search(text_corpus)
}

}
